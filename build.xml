<project name="HouseStation" default="dist" basedir=".">
	
	<property name="version.number" value="1" />
	
	<property name="lib.dir" value="./lib/" />
	<property name="bin.dir" value="./bin/" />
	<property name="dist.dir" value="./dist/" />
	<property name="logs.dir" value="./logs/" />
	<property name="dist.file" value="${dist.dir}/HouseStation.jar" />
	
	<!-- First, I create my classpath (build.classpath) from all the jar files in my lib directory -->
	<path id="build.classpath">
	  <fileset dir="${lib.dir}">
	  	<include name="**/*.jar" />
	  </fileset>
	</path>
	
	<target name="clean">
		<delete dir="${dist.dir}" />
		<mkdir dir="${dist.dir}" />
<!--		<delete dir="${logs.dir}" />
		<mkdir dir="${logs.dir}" />-->
	</target>
	
	<target name="compile">

	  <!-- convert build.classpath to mf.classpath (the string needed for the manifest task) -->
	  <pathconvert property="mf.classpath" pathsep=" ">
	      <path refid="build.classpath" />
	      <flattenmapper />
	  </pathconvert>

	  <!-- Build the manifest file, using mf.classpath -->
	  <tstamp />
	  <manifest file="MANIFEST.MF">
	    <attribute name="Created-By" value="www.evolya.fr" />
	    <attribute name="Implementation-Version" value="${version.number}"/>   
	  	<attribute name="Built-Date" value="${TODAY}"/>
	  	<attribute name="Main-Class" value="fr.evolya.domokit.Main"/>
	    <attribute name="Class-Path" value="${mf.classpath}" />
	  </manifest>
	  
	  <!-- create the jar file, including the manifest file we just created -->
	  <jar basedir="${bin.dir}" 
	       destfile="${dist.file}"
	       includes="**/*.*"
	       excludes="**/*Test*"
	       manifest="MANIFEST.MF" />
	
	</target>
		
	<target name="dist" depends="clean,compile">
		  <!-- copy all the jar files out to the destination directory (dest.dir) -->
		  <copy todir="${dist.dir}">
		    <fileset dir="${lib.dir}">
		      <exclude name="junit*" />
		    	<include name="*.jar"/>
		    	<include name="*.dll"/>
		    	<include name="*.so"/>
		    	<include name="*.zip"/>
		    	<include name="*.sh"/>
		    </fileset>
		  </copy>
		<mkdir dir="${dist.dir}/config" />
		<mkdir dir="${dist.dir}/logs" />
		<copyfile src="./config/map.xml" dest="${dist.dir}/config/map.xml" />
		<zip destfile="${dist.dir}/dist.zip" basedir="${dist.dir}" />
	</target>
	
</project>